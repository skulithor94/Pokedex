{"version":3,"sources":["Pokemonlogo.png","Services/HelperClasses.ts","Components/PokemonDetailIsOpenContext.jsx","Components/PokemonDetailModal.jsx","Components/PokemonCard.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","PokemonDetailIsOpenContext","React","createContext","isOpen","setIsOpen","PokemonDetailModal","props","pokemon","useContext","wavesurfer","useEffect","WaveSurfer","create","container","barWidth","barHeight","barGap","load","play","modal","document","querySelector","classList","toggle","className","onClick","src","alt","width","height","id","PokemonCard","useState","value","Provider","e","data","App","allPokemon","setAllPokemon","offset","setOffset","currentPokemonList","setCurrentPokemonList","currentPokemonListDetail","setCurrentPokemonListDetail","axios","get","then","res","results","handleScroll","useCallback","window","innerHeight","documentElement","scrollTop","offsetHeight","concat","a","addEventListener","removeEventListener","logo","map","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8803671.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Pokemonlogo.6e223bd2.png\";","export function capitalizeFirstLetter(string: String) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}","import React from \"react\";\r\n\r\n// set the defaults\r\nconst PokemonDetailIsOpenContext = React.createContext({\r\n  isOpen: false,\r\n  setIsOpen: () => {}\r\n});\r\n\r\nexport default PokemonDetailIsOpenContext;","import { capitalizeFirstLetter } from '../Services/HelperClasses';\r\nimport { useEffect, useContext } from 'react';\r\nimport PokemonDetailIsOpenContext from './PokemonDetailIsOpenContext';\r\nimport WaveSurfer from 'wavesurfer.js';\r\n\r\n\r\nexport default function PokemonDetailModal(props) {\r\n    let pokemon = props.pokemon;\r\n    let { isOpen, setIsOpen } = useContext(PokemonDetailIsOpenContext);\r\n    let wavesurfer = null;\r\n\r\n    function toggleModal() {\r\n        const modal = document.querySelector('.modal')\r\n        modal.classList.toggle('opacity-0')\r\n        modal.classList.toggle('pointer-events-none')\r\n        setIsOpen(false);\r\n    }\r\n\r\n    function playCry() {\r\n        if (wavesurfer !== null)\r\n            wavesurfer.play();\r\n    }\r\n\r\n    useEffect(() => {\r\n        wavesurfer = WaveSurfer.create({\r\n            container: '#waveform',\r\n            barWidth: 2,\r\n            barHeight: 1, // the height of the wave\r\n            barGap: null\r\n        });\r\n\r\n        // var audio = new Audio(`./cries-old/${pokemon['id']}.mp3`);\r\n        wavesurfer.load(`./cries-old/${pokemon['id']}.mp3`);\r\n        wavesurfer.play();\r\n\r\n        const modal = document.querySelector('.modal')\r\n        modal.classList.toggle('opacity-0')\r\n        modal.classList.toggle('pointer-events-none')\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isOpen)\r\n            return;\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"z-10 modal opacity-0 pointer-events-none absolute w-full h-full top-0 left-0 flex items-center justify-center\">\r\n                <div onClick={toggleModal} className=\"modal-overlay absolute w-full h-full bg-black opacity-25 top-0 left-0 cursor-pointer\"></div>\r\n                <div className=\"grid bg-yellow-mustard rounded-xl absolute w-1/2 h-64 shadow-lg text-2xl \">\r\n                    <div className=\"rounded-t-xl grid grid-cols-3\">\r\n                        <div>\r\n                            <img className=\"w-32 h-32 bg-purple-100 rounded-full mx-auto\" src={`./pokemon-images/${pokemon['id']}.png`} alt=\"\" width=\"384\" height=\"512\" />\r\n                        </div>\r\n                        <div className=\" col-span-2\">\r\n                            <h1 className=\"text-lg font-semibold\">\r\n                                #{pokemon['id']} {capitalizeFirstLetter(pokemon['name'])}\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-12\">\r\n                        <button onClick={playCry}><i className=\"fa fa-play fa-2x text-white\" id=\"play-btn\"></i></button>\r\n                        <div id=\"waveform\" className=\"col-span-10\"></div>\r\n                    </div>\r\n                    {/* <div className=\"bg-green-light rounded-b-xl\">3</div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useState } from 'react';\r\nimport { capitalizeFirstLetter } from '../Services/HelperClasses';\r\nimport PokemonDetailModal from './PokemonDetailModal';\r\nimport PokemonDetailIsOpenContext from './PokemonDetailIsOpenContext';\r\n\r\nexport default function PokemonCard(props) {\r\n    let [isOpen, setIsOpen] = useState(false);\r\n    let value = { isOpen, setIsOpen };\r\n    let pokemon = props.pokemon;\r\n\r\n    function handleHoverFigure(e, data) {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PokemonDetailIsOpenContext.Provider value={value}>\r\n                <figure className=\"bg-green-light rounded-xl p-8 transform transition duration-500 hover:scale-110 border-2 border-gray-600\" id={pokemon['id']} onClick={handleHoverFigure}>\r\n                    <img className=\"w-32 h-32 rounded-full mx-auto\" src={`./pokemon-images/${pokemon['id']}.png`} alt=\"\" width=\"384\" height=\"512\" />\r\n                    <div className=\"pt-6 space-y-4\">\r\n                        <blockquote>\r\n                            <p className=\"text-lg font-semibold\">\r\n                                #{pokemon['id']} {capitalizeFirstLetter(pokemon['name'])}\r\n                            </p>\r\n\r\n                        </blockquote>\r\n                        <div className=\"px-6 py-4\">\r\n                            <span className=\"inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2\">{capitalizeFirstLetter(pokemon['types'][0]['type']['name'])}</span>\r\n                            {\r\n                                pokemon['types'][1] ? <span className=\"inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2\">{capitalizeFirstLetter(pokemon['types'][1]['type']['name'])}</span> : null\r\n                            }\r\n                            {\r\n                                pokemon['types'][2] ? <span className=\"inline-block bg-grey-lighter rounded-full px-3 py-1 text-sm font-semibold text-grey-darker mr-2\">{capitalizeFirstLetter(pokemon['types'][2]['type']['name'])}</span> : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </figure>\r\n\r\n                {isOpen && <PokemonDetailModal pokemon={pokemon}></PokemonDetailModal>}\r\n            </PokemonDetailIsOpenContext.Provider>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useCallback } from 'react';\r\nimport logo from './Pokemonlogo.png';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport './Services/HelperClasses';\r\nimport PokemonCard from './Components/PokemonCard';\r\n\r\nconst offsetConst = 32;\r\nconst limit = 32;\r\n\r\nfunction App() {\r\n  let [allPokemon, setAllPokemon] = useState([]);\r\n  // let [pokemonCount, setPokemonCount] = useState(0);\r\n  let [offset, setOffset] = useState(0);\r\n  let [currentPokemonList, setCurrentPokemonList] = useState([]);\r\n  let [currentPokemonListDetail, setCurrentPokemonListDetail] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${0}`)\r\n      .then(res => {\r\n        setAllPokemon(res.data.results);\r\n        setCurrentPokemonList(res.data.results);\r\n        // setPokemonCount(res.data.count);\r\n        setOffset(offsetConst);\r\n      });\r\n  }, []);\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (window.innerHeight + document.documentElement.scrollTop - 1000 !== document.documentElement.offsetHeight - 1000) return;\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=${offset}`)\r\n      .then(res => {\r\n        setAllPokemon(allPokemon.concat(res.data.results));\r\n        setCurrentPokemonList(res.data.results);\r\n        setOffset(offset + offsetConst);\r\n      })\r\n  }, [allPokemon, offset]);\r\n\r\n  useEffect(() => {\r\n    (async function getPokemon() {\r\n      for await (let pokemon of currentPokemonList) {\r\n        let res = await axios.get(`${pokemon['url']}`);\r\n        setCurrentPokemonListDetail((currentPokemonListDetail) => [...currentPokemonListDetail, res.data]);\r\n      }\r\n    })();\r\n  }, [currentPokemonList]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [handleScroll]);\r\n\r\n  return (\r\n    <div className=\"App bg-skyblue\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1>The Pokédex of the future</h1>\r\n      </header>\r\n      <div id=\"scrollableDiv\" className=\"grid grid-flow-row grid-cols-6 gap-5 md:grid-cols-4 sm:grid-cols-2 xs:grid-cols-1\">\r\n        {currentPokemonListDetail.map((pokemon, key) => {\r\n          return (\r\n            <PokemonCard pokemon={pokemon} key={key}></PokemonCard>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}